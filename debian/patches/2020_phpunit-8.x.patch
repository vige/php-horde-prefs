From: Horde Maintainers <team+debian-horde-team@tracker.debian.org>
Date: Thu, 9 Nov 2023 16:30:53 +0200
Subject: _phpunit-8.x

===================================================================
---
 Horde_Prefs-2.9.0/lib/Horde/Prefs/Identity.php | 12 ++++++------
 Horde_Prefs-2.9.0/lib/Horde/Prefs/Scope.php    |  5 +++++
 2 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/Horde_Prefs-2.9.0/lib/Horde/Prefs/Identity.php b/Horde_Prefs-2.9.0/lib/Horde/Prefs/Identity.php
index 3301604..9043b51 100644
--- a/Horde_Prefs-2.9.0/lib/Horde/Prefs/Identity.php
+++ b/Horde_Prefs-2.9.0/lib/Horde/Prefs/Identity.php
@@ -415,7 +415,7 @@ implements ArrayAccess, Countable, IteratorAggregate
     /**
      * @since 2.7.0
      */
-    public function offsetExists($offset)
+    public function offsetExists($offset): bool
     {
         return isset($this->_identities[$offset]);
     }
@@ -423,7 +423,7 @@ implements ArrayAccess, Countable, IteratorAggregate
     /**
      * @since 2.7.0
      */
-    public function offsetGet($offset)
+    public function offsetGet($offset): mixed
     {
         return $this->get($offset);
     }
@@ -431,7 +431,7 @@ implements ArrayAccess, Countable, IteratorAggregate
     /**
      * @since 2.7.0
      */
-    public function offsetSet($offset, $value)
+    public function offsetSet($offset, $value): void
     {
         // $value is ignored.
         $this->set($offset);
@@ -440,7 +440,7 @@ implements ArrayAccess, Countable, IteratorAggregate
     /**
      * @since 2.7.0
      */
-    public function offsetUnset($offset)
+    public function offsetUnset($offset): void
     {
         $this->delete($offset);
     }
@@ -450,7 +450,7 @@ implements ArrayAccess, Countable, IteratorAggregate
     /**
      * @since 2.7.0
      */
-    public function count()
+    public function count(): int
     {
         return count($this->_identities);
     }
@@ -460,7 +460,7 @@ implements ArrayAccess, Countable, IteratorAggregate
     /**
      * @since 2.7.0
      */
-    public function getIterator()
+    public function getIterator(): Traversable
     {
         return new ArrayIterator($this->_identities);
     }
diff --git a/Horde_Prefs-2.9.0/lib/Horde/Prefs/Scope.php b/Horde_Prefs-2.9.0/lib/Horde/Prefs/Scope.php
index db0a00e..f3a98f5 100644
--- a/Horde_Prefs-2.9.0/lib/Horde/Prefs/Scope.php
+++ b/Horde_Prefs-2.9.0/lib/Horde/Prefs/Scope.php
@@ -276,6 +276,7 @@ class Horde_Prefs_Scope implements Iterator, Serializable
 
     /**
      */
+    #[\ReturnTypeWillChange]
     public function current()
     {
         return $this->_fromInternal($this->key());
@@ -283,6 +284,7 @@ class Horde_Prefs_Scope implements Iterator, Serializable
 
     /**
      */
+    #[\ReturnTypeWillChange]
     public function key()
     {
         return key($this->_prefs);
@@ -290,6 +292,7 @@ class Horde_Prefs_Scope implements Iterator, Serializable
 
     /**
      */
+    #[\ReturnTypeWillChange]
     public function next()
     {
         return next($this->_prefs);
@@ -297,6 +300,7 @@ class Horde_Prefs_Scope implements Iterator, Serializable
 
     /**
      */
+    #[\ReturnTypeWillChange]
     public function rewind()
     {
         return reset($this->_prefs);
@@ -304,6 +308,7 @@ class Horde_Prefs_Scope implements Iterator, Serializable
 
     /**
      */
+    #[\ReturnTypeWillChange]
     public function valid()
     {
         return !is_null(key($this->_prefs));
